var Transform = require('stream').Transform;
var HTTPErrors = require('http-errors');

function AuthoriseUserStream(options) {
  options = options || {};
  options.objectMode = true;

  Transform.call(this, options);
}

AuthoriseUserStream.prototype = Object.create(Transform.prototype, {
  constructor: { value: AuthoriseUserStream }
});

AuthoriseUserStream.prototype._transform = function (data, enc, done) {
  if (this._userNotAuthenticated(data)) {
    this.emit('error', new HTTPErrors.NotAuthorizedError());
  }
  else {
    this.push(data);
  }

  done();
};

AuthoriseUserStream.prototype._userNotAuthenticated = function (data) {
  return !data.currentUser;
};

module.exports = function authoriseUserStream() {
  return new AuthoriseUserStream();
}

module.exports.AuthoriseUser = AuthoriseUserStream;
