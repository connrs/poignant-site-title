var InvalidOptionsError = require('./invalid-options-error.js');

function LoadUserSession(options) {
  this._validateOptions(options);

  this._userId = options.userId;
  this._userFinder = options.userFinder;
  this._userBuilder = options.userBuilder;
}

LoadUserSession.prototype.exec = function (done) {
  if (!this._userId) { return done(null, null); }

  var self = this;

  this._userFinder.findById(this._userId, function (err, data) {
    if (err) { return done(err); }

    done(null, self._userBuilder(data));
  });
};

LoadUserSession.prototype._validateOptions = function (options) {
  if (!this._validOptions(options)) {
    throw new InvalidOptionsError();
  }
};

LoadUserSession.prototype._validOptions = function (options) {
  if (options && options.userFinder && options.userBuilder) {
    return true;
  }

  return false;
};

function loadUserSession(options, done) {
  var lus = new LoadUserSession(options);
  lus.exec(done);
}

module.exports = loadUserSession;
