function DomainRequestHandler(options) {
  this._domain = options.domain;
  this._requestListener = options.requestListener;
}

DomainRequestHandler.prototype.exec = function (req, res, server) {
  var requestListener = this._requestListener;
  var domain = this._domain.create();

  domain.add(req);
  domain.add(res);
  domain.on('error', this._handleUnrecoverableError(server, res));
  domain.run(function () {
    requestListener(req, res);
  });
};

DomainRequestHandler.prototype._handleUnrecoverableError = function (server, res) {
  var self = this;

  return function (err) {
    try {
      self._logError(err);
      var killtimer = setTimeout(function () {
        process.exit(1)
      }, 30000);

      killtimer.unref();
      server.close();
      self._disconnectWorker();
      res.statusCode = 500;
      res.setHeader('content-type', 'text/plain');
      res.end('Oops, there was a problem!\n');
    }
    catch (err2) {
      
    }
  };
};

module.exports = DomainRequestHandler;
