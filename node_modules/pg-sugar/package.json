{
  "engines": {
    "node": ">= 0.10"
  },
  "name": "pg-sugar",
  "description": "Sugar on top of pg",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/connrs/node-pg-sugar.git"
  },
  "main": "lib/pg-sugar.js",
  "scripts": {
    "test": "node_modules/tape/bin/tape test/*.js"
  },
  "licenses": [
    {
      "type": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.txt"
    }
  ],
  "author": {
    "name": "connrs"
  },
  "dependencies": {},
  "devDependencies": {
    "tape": "~2.0.0"
  },
  "readme": "# PG Sugar [![Build Status](https://secure.travis-ci.org/connrs/node-pg-sugar.png?branch=master)](http://travis-ci.org/connrs/node-pg-sugar)\n\nA couple of methods to automate pooling with `pg`.\n\nCreate sugar\n\n    var sugar = require('pg-sugar');\n    var s = sugar(pg, connectionString);\n\nCreate a client to perform a query\n\n    s.client(function (err, query) {\n      query('SELECT 1', [], function (err, results) {\n        // Do stuff\n        // Client is automatically returned to the pool\n      });\n    });\n\nCreate a transaction client to run transactions\n\n    s.transaction(function (err, client) {\n      client.query('SELECT 2', [], function (err, results, client) {\n        if (err) {\n          client.rollback(function () { console.log('LOSE!'); });\n        }\n        else {\n          client.commit(function () { console.log('WIN!'); });\n        }\n      });\n    });\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/connrs/node-pg-sugar/issues"
  },
  "_id": "pg-sugar@0.0.2",
  "dist": {
    "shasum": "d894d97c3f0d883094fa7a0c5ff35a44a1fa0d41"
  },
  "_from": "pg-sugar@0.0.2",
  "_resolved": "https://registry.npmjs.org/pg-sugar/-/pg-sugar-0.0.2.tgz"
}
