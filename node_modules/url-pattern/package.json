{
  "name": "url-pattern",
  "version": "0.2.1",
  "description": "url-pattern matches urls with patterns and extracts named url segments",
  "homepage": "http://github.com/snd/url-pattern",
  "author": {
    "name": "Maximilian KrÃ¼ger",
    "email": "kruemaxi@gmail.com",
    "url": "http://github.com/snd"
  },
  "bugs": {
    "url": "http://github.com/snd/url-pattern/issues",
    "email": "kruemaxi@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/snd/url-pattern.git"
  },
  "licenses": {
    "type": "MIT",
    "url": "git://github.com/snd/url-pattern/LICENSE"
  },
  "engines": {
    "node": ">=0.8.5"
  },
  "dependencies": {
    "coffee-script": "1.4.0"
  },
  "devDependencies": {
    "nodeunit": "0.7.4"
  },
  "main": "lib/url-pattern",
  "scripts": {
    "prepublish": "coffee --bare --compile --lint --output lib src/*.coffee",
    "postpublish": "rm -rf lib",
    "test": "nodeunit test.coffee"
  },
  "readme": "# url-pattern\n\n[![Build Status](https://travis-ci.org/snd/url-pattern.png)](https://travis-ci.org/snd/url-pattern)\n\nurl-pattern matches urls with patterns and extracts named url segments\n\n### install\n\n```\nnpm install url-pattern\n```\n\n### use\n\n##### require\n\n```coffeescript\nnewPattern = require 'url-pattern'\n```\n\n##### make pattern from string\n\n```coffeescript\npattern = newPattern '/users/:id'\n```\n\n##### make pattern from regex\n\n```coffeescript\nregexPattern = newPattern /\\/foo\\/(.*)/\n```\n\n##### match pattern against url\n\n```coffeescript\npattern.match '/projects/5' # => null\npattern.match '/users/5' # => {id: '5'}\npattern.match '/users/foo' # => {id: 'foo'}\n```\n\nmatch returns the extracted parameters or `null` if there was no match\n\n##### match regex pattern against url\n\n```coffeescript\nregexPattern.match '/users/foo' # => null\nregexPattern.match '/foo/' # => ['']\nregexPattern.match '/foo/bar' # => ['bar']\n```\n\nif the pattern was created from a regex an array of the captured groups is returned on match.\n\n### pattern examples\n\n`/users` will match exactly `/users`\n\n`/projects/:projectId/supporters/:supporterId` will match any url where the first\nsegment is `projects`, the second segment is not empty, the third segment is\n`supporters` and the fourth segment is not empty. the second and fourth segments will be bound\nto `projectId` and `supporterId`\n\n`/projects/*` will match any url which begins with `/projects/`\n\n`*/projects` will match any url which ends with `/projects`\n\n`/users/*/projects` will match any url which starts with `/users/` and ends with `/projects`\n\n### license: MIT\n",
  "readmeFilename": "README.md",
  "_id": "url-pattern@0.2.1",
  "dist": {
    "shasum": "700fa9fa5bf9ec59236bf6a9fe15d889f3024d44"
  },
  "_from": "url-pattern@",
  "_resolved": "https://registry.npmjs.org/url-pattern/-/url-pattern-0.2.1.tgz"
}
