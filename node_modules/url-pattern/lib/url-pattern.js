// Generated by CoffeeScript 1.4.0
var common, pattern;

common = require('./common');

pattern = {
  match: function(url) {
    var bound, captured, i, match, _i, _ref;
    match = this.regex.exec(url);
    if (match == null) {
      return null;
    }
    captured = match.slice(1);
    if (this.isRegex) {
      return captured;
    }
    bound = {};
    for (i = _i = 0, _ref = captured.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      bound[this.names[i]] = captured[i];
    }
    return bound;
  }
};

module.exports = function(arg) {
  var isRegex, p;
  isRegex = arg instanceof RegExp;
  if (!(('string' === typeof arg) || isRegex)) {
    throw new TypeError('argument must be a regex or a string');
  }
  p = Object.create(pattern);
  p.isRegex = isRegex;
  p.regex = isRegex ? arg : new RegExp(common.toRegexString(arg));
  if (!isRegex) {
    p.names = common.getNames(arg);
  }
  return p;
};
